version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:16-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: assignementdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./assignment/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d assignementdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # React Frontend Service
  frontend:
    build:
      context: ./assignment-frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - app-network

  # Spring Boot Backend Service
  backend:
    build:
      context: ./assignment
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # *** IMPORTANT CHANGE HERE ***
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/assignementdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_SQL_INIT_MODE: always
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data: